trigger:
- '*'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Define your Azure Service Principal credentials as pipeline variables
  azureSubscription: '<Azure Subscription Name>'
  clientId: '<Service Principal Client ID>'
  clientSecret: $(azureServicePrincipalKey) # Define this variable as a secret variable in your pipeline settings
  tenantId: '<Azure Tenant ID>'
  resourceGroupName: '<Azure Resource Group Name>'

steps:
- checkout: self

- task: CopyFiles@2
  displayName: 'Copy files to $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**' # Copy all files
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- script: |
    sudo apt-get update -q -y
    sudo apt-get install -y curl unzip
    curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
    sudo apt-get update -q -y
    sudo apt-get install -y terraform
  displayName: 'Install Terraform'

- script: |
    cd $(Build.ArtifactStagingDirectory)
    terraform init
  displayName: 'Terraform Init'
  
- script: |
    cd $(Build.ArtifactStagingDirectory)
    terraform fmt -check -diff
  displayName: 'Terraform Format Check'
  
- script: |
    cd $(Build.ArtifactStagingDirectory)
    terraform plan -var "client_id=$(clientId)" -var "client_secret=$(clientSecret)" -var "tenant_id=$(tenantId)" -var "subscription_id=$(azureSubscription)" -var "resource_group_name=$(resourceGroupName)"
  displayName: 'Terraform Plan'

- script: |
    cd $(Build.ArtifactStagingDirectory)
    terraform apply -auto-approve -var "client_id=$(clientId)" -var "client_secret=$(clientSecret)" -var "tenant_id=$(tenantId)" -var "subscription_id=$(azureSubscription)" -var "resource_group_name=$(resourceGroupName)"
  displayName: 'Terraform Apply'